---
import BaseLayout from '../layouts/BaseLayout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { getCollection } from 'astro:content';

const allPosts = await getCollection('blog', ({ data }) => !data.draft);
const sortedPosts = allPosts.sort((a, b) => 
  b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// Get unique categories
const categories = [...new Set(allPosts.map(post => post.data.category))];
---

<BaseLayout 
  title="Espresso Machine Reviews & Buying Guides - Home Espresso Hub"
  description="Browse our comprehensive collection of espresso machine reviews, comparisons, and buying guides for every budget and skill level."
>
  <Header />
  
  <main class="container-custom section-padding">
    <!-- Page Header -->
    <div class="text-center mb-12">
      <h1 class="text-5xl font-display font-bold text-espresso-dark mb-4">
        Reviews & Guides
      </h1>
      <p class="text-xl text-gray-600 max-w-3xl mx-auto">
        Everything you need to know about choosing and using home espresso machines.
      </p>
    </div>

    <!-- Category Filter -->
    <div class="flex flex-wrap gap-3 justify-center mb-12">
      <button class="filter-btn active" data-category="all">
        All Posts
      </button>
      {categories.map(cat => (
        <button class="filter-btn" data-category={cat}>
          {cat.replace('-', ' ').replace(/\b\w/g, l => l.toUpperCase())}
        </button>
      ))}
    </div>

    <!-- Posts Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="posts-grid">
      {sortedPosts.map(post => (
        <article 
          class="card post-item"
          data-category={post.data.category}
        >
          {post.data.heroImage && (
            <img 
              src={post.data.heroImage}
              alt={post.data.title}
              class="w-full h-48 object-cover rounded-lg mb-4"
            />
          )}
          
          <div class="flex items-center gap-2 mb-3">
            <span class="text-xs bg-latte-tan text-espresso-dark px-2 py-1 rounded">
              {post.data.category}
            </span>
            <time class="text-sm text-gray-600">
              {post.data.pubDate.toLocaleDateString('en-US', { 
                year: 'numeric', 
                month: 'short', 
                day: 'numeric' 
              })}
            </time>
          </div>

          <h2 class="text-xl font-bold text-espresso-dark mb-3">
            <a href={`/blog/${post.slug}`} class="hover:text-caramel transition">
              {post.data.title}
            </a>
          </h2>

          <p class="text-gray-600 mb-4">
            {post.data.description}
          </p>

          <a 
            href={`/blog/${post.slug}`}
            class="text-caramel font-semibold hover:text-espresso-brown inline-flex items-center"
          >
            Read More 
            <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
          </a>
        </article>
      ))}
    </div>
  </main>

  <Footer />
</BaseLayout>

<script>
  const filterButtons = document.querySelectorAll('.filter-btn');
  const postItems = document.querySelectorAll('.post-item');

  filterButtons.forEach(button => {
    button.addEventListener('click', () => {
      const category = button.getAttribute('data-category');
      
      // Update active button
      filterButtons.forEach(btn => btn.classList.remove('active'));
      button.classList.add('active');
      
      // Filter posts
      postItems.forEach(post => {
        if (category === 'all' || post.getAttribute('data-category') === category) {
          post.style.display = 'block';
        } else {
          post.style.display = 'none';
        }
      });
    });
  });
</script>

<style>
  .filter-btn {
    @apply px-4 py-2 rounded-lg border-2 border-gray-300 text-gray-700 font-semibold transition-all;
  }
  
  .filter-btn:hover {
    @apply border-caramel text-caramel;
  }
  
  .filter-btn.active {
    @apply bg-caramel text-white border-caramel;
  }
</style>