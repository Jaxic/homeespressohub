---
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';
import ComparisonTable from '../components/ComparisonTable.astro';
import MachineCard from '../components/MachineCard.astro';

const url = Astro.url;
const machineParams = url.searchParams.get('machines');
let selectedMachines: any[] = [];
let allMachines: any[] = [];

// Get all machines for fallback recommendations
allMachines = await getCollection('machines', ({ data }) => !data.draft);

if (machineParams) {
  const machineSlugs = machineParams.split(',').filter(slug => slug.trim());
  selectedMachines = allMachines.filter(machine => machineSlugs.includes(machine.slug));
}

// Get popular machines for comparison if none selected
const popularMachines = allMachines
  .sort((a, b) => b.data.rating - a.data.rating)
  .slice(0, 6);

// Get machines by category for suggestions
const categories = [...new Set(allMachines.map(machine => machine.data.category))];
const machinesByCategory = categories.reduce((acc, category) => {
  acc[category] = allMachines
    .filter(machine => machine.data.category === category)
    .sort((a, b) => b.data.rating - a.data.rating)
    .slice(0, 4);
  return acc;
}, {} as Record<string, any[]>);
---

<BaseLayout 
  title="Compare Espresso Machines - Side by Side Comparison | Home Espresso Hub"
  description="Compare the best home espresso machines side by side. See detailed specifications, features, prices, and ratings to find your perfect match."
>
  <!-- Hero Section -->
  <section class="bg-gradient-to-r from-espresso-dark to-warm-charcoal text-coffee-cream py-16">
    <div class="max-w-6xl mx-auto px-4 text-center">
      <h1 class="text-4xl md:text-6xl font-bold mb-6">
        {selectedMachines.length > 0 ? 'Machine Comparison' : 'Compare Espresso Machines'}
      </h1>
      <p class="text-xl md:text-2xl text-coffee-cream/90 mb-8 max-w-3xl mx-auto">
        {selectedMachines.length > 0 
          ? `Compare ${selectedMachines.length} espresso machines side by side to find the perfect match for your needs.`
          : 'Find the perfect espresso machine by comparing features, specifications, prices, and user ratings side by side.'
        }
      </p>
    </div>
  </section>

  <main class="max-w-7xl mx-auto px-4 py-12">
    {selectedMachines.length > 1 ? (
      <!-- Selected Machines Comparison -->
      <section class="mb-16">
        <ComparisonTable 
          machines={selectedMachines} 
          title={`Comparing ${selectedMachines.length} Machines`}
          layout="full"
        />
      </section>
    ) : (
      <!-- No machines selected - Show selection interface -->
      <section class="mb-16">
        <div class="bg-coffee-cream rounded-lg p-8 text-center mb-12">
          <h2 class="text-2xl font-bold text-espresso-dark mb-4">Select Machines to Compare</h2>
          <p class="text-warm-charcoal mb-6">
            {selectedMachines.length === 1 
              ? 'You have 1 machine selected. Add more machines to start comparing.'
              : 'Choose 2-4 espresso machines to compare their features, specs, and prices side by side.'
            }
          </p>
          <div id="selected-machines" class="flex flex-wrap justify-center gap-2 mb-6">
            {selectedMachines.map(machine => (
              <span class="bg-latte-cream px-4 py-2 rounded-full text-sm font-medium flex items-center gap-2">
                {machine.data.name}
                <button class="remove-machine text-red-600 hover:text-red-800" data-slug={machine.slug}>
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </button>
              </span>
            ))}
          </div>
          {selectedMachines.length >= 2 && (
            <button id="compare-selected" class="bg-espresso-dark hover:bg-warm-charcoal text-coffee-cream px-6 py-3 rounded-lg font-semibold transition-colors">
              Compare Selected Machines
            </button>
          )}
        </div>
      </section>
    )}

    <!-- Popular Comparisons -->
    {selectedMachines.length <= 1 && (
      <section class="mb-16">
        <h2 class="text-3xl font-bold text-espresso mb-8 text-center">
          Popular Machine Comparisons
        </h2>
        
        <div class="grid gap-8">
          {/* Top Rated vs Mid-Range Comparison */}
          <div class="bg-coffee-cream rounded-lg p-6">
            <h3 class="text-xl font-bold text-espresso-dark mb-4">Top Rated Machines</h3>
            <ComparisonTable 
              machines={popularMachines.slice(0, 3)} 
              title="Best Overall Performers"
              layout="compact"
            />
          </div>

          {/* Category Comparisons */}
          {Object.entries(machinesByCategory).map(([category, machines]) => (
            (machines as any[]).length >= 2 && (
              <div class="bg-coffee-cream rounded-lg p-6">
                <h3 class="text-xl font-bold text-espresso-dark mb-4 capitalize">
                  Best {category.replace('-', ' ')} Machines
                </h3>
                <ComparisonTable 
                  machines={(machines as any[]).slice(0, 3)} 
                  title={`${category.replace('-', ' ').replace(/\b\w/g, l => l.toUpperCase())} Comparison`}
                  layout="compact"
                />
              </div>
            )
          ))}
        </div>
      </section>
    )}

    <!-- Machine Selection Grid -->
    {selectedMachines.length <= 1 && (
      <section class="mb-16">
        <h2 class="text-3xl font-bold text-espresso-dark mb-8 text-center">
          Add Machines to Compare
        </h2>
        
        <!-- Filter Options -->
        <div class="bg-coffee-cream p-6 rounded-lg mb-8">
          <div class="grid md:grid-cols-3 gap-4">
            <div>
              <label for="category-filter" class="block text-sm font-semibold text-espresso-dark mb-2">
                Category
              </label>
              <select id="category-filter" class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-caramel focus:border-transparent">
                <option value="">All Categories</option>
                {categories.map(category => (
                  <option value={category} class="capitalize">
                    {category.replace('-', ' ')}
                  </option>
                ))}
              </select>
            </div>
            
            <div>
              <label for="price-filter" class="block text-sm font-semibold text-espresso-dark mb-2">
                Price Range
              </label>
              <select id="price-filter" class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-caramel focus:border-transparent">
                <option value="">All Prices</option>
                <option value="budget">Budget</option>
                <option value="mid-range">Mid-Range</option>
                <option value="premium">Premium</option>
                <option value="prosumer">Prosumer</option>
              </select>
            </div>
            
            <div>
              <label for="rating-filter" class="block text-sm font-semibold text-espresso-dark mb-2">
                Min Rating
              </label>
              <select id="rating-filter" class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-caramel focus:border-transparent">
                <option value="">Any Rating</option>
                <option value="4.5">4.5+ Stars</option>
                <option value="4.0">4.0+ Stars</option>
                <option value="3.5">3.5+ Stars</option>
              </select>
            </div>
          </div>
        </div>

        <div id="machines-grid" class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
          {allMachines.map((machine) => (
            <div 
              class="machine-card"
              data-category={machine.data.category}
              data-price-range={machine.data.priceRange}
              data-rating={machine.data.rating}
            >
              <MachineCard
                name={machine.data.name}
                brand={machine.data.brand}
                price={machine.data.price}
                originalPrice={machine.data.originalPrice}
                image={machine.data.image}
                amazonLink={machine.data.amazonLink}
                affiliateLink={machine.data.affiliateLink}
                features={machine.data.features}
                rating={machine.data.rating}
                category={machine.data.category}
                priceRange={machine.data.priceRange}
                bestFor={machine.data.bestFor}
                benefitDescription={machine.data.benefitDescription}
                slug={machine.slug}
                featured={machine.data.featured}
                showCompareButton={true}
                showQuickView={false}
                layout="compact"
              />
            </div>
          ))}
        </div>
      </section>
    )}

    <!-- Comparison Tips -->
    <section class="bg-gradient-to-r from-latte-cream to-coffee-cream p-8 rounded-lg">
      <h2 class="text-2xl font-bold text-espresso mb-6 text-center">
        How to Choose the Right Espresso Machine
      </h2>
      
      <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
        <div class="text-center">
          <div class="bg-caramel text-espresso-dark w-12 h-12 rounded-full flex items-center justify-center mx-auto mb-4">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1" />
            </svg>
          </div>
          <h3 class="font-bold text-espresso-dark mb-2">Budget</h3>
          <p class="text-sm text-warm-charcoal">Compare prices and find the best value for your budget range.</p>
        </div>
        
        <div class="text-center">
          <div class="bg-caramel text-espresso-dark w-12 h-12 rounded-full flex items-center justify-center mx-auto mb-4">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
            </svg>
          </div>
          <h3 class="font-bold text-espresso-dark mb-2">Features</h3>
          <p class="text-sm text-warm-charcoal">Look for features that match your brewing style and preferences.</p>
        </div>
        
        <div class="text-center">
          <div class="bg-caramel text-espresso-dark w-12 h-12 rounded-full flex items-center justify-center mx-auto mb-4">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
          </div>
          <h3 class="font-bold text-espresso-dark mb-2">Quality</h3>
          <p class="text-sm text-warm-charcoal">Check build quality, materials, and user ratings for reliability.</p>
        </div>
        
        <div class="text-center">
          <div class="bg-caramel text-espresso-dark w-12 h-12 rounded-full flex items-center justify-center mx-auto mb-4">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
            </svg>
          </div>
          <h3 class="font-bold text-espresso-dark mb-2">Ease of Use</h3>
          <p class="text-sm text-warm-charcoal">Consider automation level and learning curve for your skill level.</p>
        </div>
      </div>
      
      <div class="text-center mt-8">
        <a 
          href="/guides/complete-home-espresso-guide"
          class="bg-espresso-dark hover:bg-warm-charcoal text-coffee-cream px-6 py-3 rounded-lg font-semibold transition-colors"
        >
          Read Complete Buying Guide
        </a>
      </div>
    </section>
  </main>

  <!-- Comparison JavaScript -->
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const categoryFilter = document.getElementById('category-filter') as HTMLSelectElement;
      const priceFilter = document.getElementById('price-filter') as HTMLSelectElement;
      const ratingFilter = document.getElementById('rating-filter') as HTMLSelectElement;
      const machineCards = document.querySelectorAll('.machine-card');
      const compareSelectedBtn = document.getElementById('compare-selected');
      const removeMachineBtns = document.querySelectorAll('.remove-machine');
      
      let selectedMachines: string[] = new URLSearchParams(window.location.search)
        .get('machines')?.split(',').filter(Boolean) || [];

      function filterMachines() {
        const selectedCategory = categoryFilter?.value || '';
        const selectedPrice = priceFilter?.value || '';
        const minRating = parseFloat(ratingFilter?.value || '0');
        
        machineCards.forEach((card) => {
          const cardElement = card as HTMLElement;
          const cardCategory = cardElement.dataset.category || '';
          const cardPrice = cardElement.dataset.priceRange || '';
          const cardRating = parseFloat(cardElement.dataset.rating || '0');
          
          const categoryMatch = !selectedCategory || cardCategory === selectedCategory;
          const priceMatch = !selectedPrice || cardPrice === selectedPrice;
          const ratingMatch = cardRating >= minRating;
          
          const shouldShow = categoryMatch && priceMatch && ratingMatch;
          cardElement.style.display = shouldShow ? 'block' : 'none';
        });
      }

      function updateURL() {
        if (selectedMachines.length > 0) {
          const newURL = `${window.location.pathname}?machines=${selectedMachines.join(',')}`;
          window.history.pushState({}, '', newURL);
        } else {
          window.history.pushState({}, '', window.location.pathname);
        }
      }

      function removeMachine(slug: string) {
        selectedMachines = selectedMachines.filter(s => s !== slug);
        updateURL();
        location.reload();
      }

      // Handle compare buttons
      document.addEventListener('click', function(e) {
        const target = e.target as HTMLElement;
        if (target.classList.contains('compare-btn')) {
          e.preventDefault();
          const machineSlug = target.dataset.machineSlug;
          const machineName = target.dataset.machineName;
          
          if (machineSlug && !selectedMachines.includes(machineSlug)) {
            if (selectedMachines.length >= 4) {
              alert('You can compare up to 4 machines at once.');
              return;
            }
            
            selectedMachines.push(machineSlug);
            updateURL();
            
            // Show notification
            const notification = document.createElement('div');
            notification.className = 'fixed top-4 right-4 bg-caramel text-espresso-dark px-4 py-2 rounded-lg shadow-lg z-50';
            notification.textContent = `${machineName} added to comparison`;
            document.body.appendChild(notification);
            
            setTimeout(() => {
              document.body.removeChild(notification);
              if (selectedMachines.length >= 2) {
                location.reload();
              }
            }, 1500);
          }
        }
      });

      // Event listeners
      categoryFilter?.addEventListener('change', filterMachines);
      priceFilter?.addEventListener('change', filterMachines);
      ratingFilter?.addEventListener('change', filterMachines);
      
      compareSelectedBtn?.addEventListener('click', function() {
        if (selectedMachines.length >= 2) {
          location.reload();
        }
      });
      
      removeMachineBtns.forEach(btn => {
        btn.addEventListener('click', function(this: HTMLElement) {
          const slug = this.dataset.slug;
          if (slug) removeMachine(slug);
        });
      });

      // Initialize filters
      if (categoryFilter) filterMachines();
    });
  </script>
</BaseLayout>