---
import { type CollectionEntry, getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import MachineSpecs from '../../components/MachineSpecs.astro';
import ComparisonTable from '../../components/ComparisonTable.astro';
import MachineCard from '../../components/MachineCard.astro';

export async function getStaticPaths() {
  const machines = await getCollection('espresso-machines');
  return machines.map((machine) => ({
    params: { slug: machine.slug },
    props: { machine, allMachines: machines },
  }));
}

type Props = {
  machine: CollectionEntry<'espresso-machines'>;
  allMachines: CollectionEntry<'espresso-machines'>[];
};

const { machine, allMachines } = Astro.props;
const { Content } = await machine.render();
const { data } = machine;

// Get similar machines for comparison
const similarMachines = allMachines
  .filter(m => 
    m.slug !== machine.slug && 
    (m.data.category === data.category || m.data.priceRange === data.priceRange || m.data.bestFor === data.bestFor)
  )
  .sort((a, b) => b.data.rating - a.data.rating)
  .slice(0, 6);

// Get machines in same category
const sameCategoryMachines = allMachines
  .filter(m => m.slug !== machine.slug && m.data.category === data.category)
  .sort((a, b) => b.data.rating - a.data.rating)
  .slice(0, 3);
---

<BaseLayout 
  title={`${data.name} - Home Espresso Hub`}
  description={`${data.benefitDescription} Read our detailed review of the ${data.name} espresso machine.`}
>
  <main class="max-w-4xl mx-auto px-4 py-8">
    <!-- Hero Section -->
    <div class="bg-gradient-to-r from-espresso-dark to-coffee-bean text-cream rounded-lg p-8 mb-8">
      <div class="grid md:grid-cols-2 gap-8 items-center">
        <div>
          <h1 class="text-4xl font-bold mb-4">{data.name}</h1>
          <p class="text-xl mb-6 text-cream/90">{data.benefitDescription}</p>
          
          <!-- Price and Rating -->
          <div class="flex flex-wrap items-center gap-4 mb-6">
            <div class="flex items-center gap-2">
              <span class="text-3xl font-bold text-caramel">${data.price}</span>
              {data.originalPrice && (
                <span class="text-lg line-through text-cream/70">${data.originalPrice}</span>
              )}
            </div>
            <div class="flex items-center gap-1">
              {Array.from({ length: 5 }, (_, i) => (
                <svg
                  class={`w-5 h-5 ${i < Math.floor(data.rating) ? 'text-yellow-400' : 'text-gray-400'}`}
                  fill="currentColor"
                  viewBox="0 0 20 20"
                >
                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                </svg>
              ))}
              <span class="text-cream/90 ml-2">{data.rating}/5</span>
            </div>
          </div>

          <!-- CTA Buttons -->
          <div class="flex flex-wrap gap-4">
            <a 
              href={data.amazonLink}
              target="_blank"
              rel="noopener noreferrer"
              class="bg-caramel hover:bg-caramel/90 text-espresso px-6 py-3 rounded-lg font-semibold transition-colors"
            >
              Check Price on Amazon
            </a>
            {data.affiliateLink && data.affiliateLink !== data.amazonLink && (
              <a 
                href={data.affiliateLink}
                target="_blank"
                rel="noopener noreferrer"
                class="border-2 border-cream hover:bg-cream hover:text-espresso text-cream px-6 py-3 rounded-lg font-semibold transition-colors"
              >
                Buy Now
              </a>
            )}
          </div>
        </div>

        <!-- Product Image -->
        <div class="order-first md:order-last">
          <img 
            src={data.image} 
            alt={data.name}
            class="w-full max-w-md mx-auto rounded-lg shadow-lg"
            loading="eager"
          />
        </div>
      </div>
    </div>

    <!-- Quick Info Cards -->
    <div class="grid md:grid-cols-3 gap-4 mb-8">
      <div class="bg-latte p-6 rounded-lg text-center">
        <h3 class="font-semibold text-espresso mb-2">Category</h3>
        <p class="capitalize text-charcoal">{data.category.replace('-', ' ')}</p>
      </div>
      <div class="bg-latte p-6 rounded-lg text-center">
        <h3 class="font-semibold text-espresso mb-2">Best For</h3>
        <p class="capitalize text-charcoal">{data.bestFor}</p>
      </div>
      <div class="bg-latte p-6 rounded-lg text-center">
        <h3 class="font-semibold text-espresso mb-2">Price Range</h3>
        <p class="capitalize text-charcoal">{data.priceRange.replace('-', ' ')}</p>
      </div>
    </div>

    <!-- Features Section -->
    <section class="mb-8">
      <h2 class="text-2xl font-bold text-espresso mb-6">Key Features</h2>
      <div class="grid md:grid-cols-2 gap-4">
        {data.features.map((feature) => (
          <div class="flex items-center gap-3 bg-cream p-4 rounded-lg">
            <svg class="w-6 h-6 text-caramel flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
            </svg>
            <span class="text-charcoal">{feature}</span>
          </div>
        ))}
      </div>
    </section>

    <!-- Specifications -->
    <MachineSpecs specs={data.specs} />

    <!-- Content -->
    <article class="prose prose-lg max-w-none mb-8">
      <Content />
    </article>

    <!-- Compare with Similar Machines -->
    {sameCategoryMachines.length > 0 && (
      <section class="mb-12">
        <h2 class="text-2xl font-bold text-espresso mb-6 text-center">
          Compare with Similar {data.category.replace('-', ' ').replace(/\b\w/g, l => l.toUpperCase())} Machines
        </h2>
        <ComparisonTable 
          machines={[machine, ...sameCategoryMachines]} 
          title="Side-by-Side Comparison"
          layout="compact"
        />
      </section>
    )}

    <!-- Alternative Machines -->
    {similarMachines.length > 0 && (
      <section class="mb-12">
        <h2 class="text-2xl font-bold text-espresso mb-6">
          You Might Also Consider
        </h2>
        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
          {similarMachines.slice(0, 3).map((similarMachine) => (
            <MachineCard
              name={similarMachine.data.name}
              brand={similarMachine.data.brand}
              price={similarMachine.data.price}
              originalPrice={similarMachine.data.originalPrice}
              image={similarMachine.data.image}
              amazonLink={similarMachine.data.amazonLink}
              affiliateLink={similarMachine.data.affiliateLink}
              features={similarMachine.data.features}
              rating={similarMachine.data.rating}
              category={similarMachine.data.category}
              priceRange={similarMachine.data.priceRange}
              bestFor={similarMachine.data.bestFor}
              benefitDescription={similarMachine.data.benefitDescription}
              slug={similarMachine.slug}
              featured={similarMachine.data.featured}
              showCompareButton={true}
              showQuickView={false}
            />
          ))}
        </div>
        
        <div class="text-center mt-6">
          <a 
            href={`/espresso-machines/category/${data.category}`}
            class="text-caramel hover:text-espresso font-semibold"
          >
            View All {data.category.replace('-', ' ').replace(/\b\w/g, l => l.toUpperCase())} Machines →
          </a>
        </div>
      </section>
    )}

    <!-- Bottom CTA -->
    <div class="bg-gradient-to-r from-caramel to-latte p-8 rounded-lg text-center">
      <h3 class="text-2xl font-bold text-espresso mb-4">Ready to upgrade your espresso game?</h3>
      <p class="text-charcoal mb-6">Get the {data.name} and start brewing café-quality espresso at home.</p>
      <div class="flex flex-wrap justify-center gap-4">
        <a 
          href={data.amazonLink}
          target="_blank"
          rel="noopener noreferrer"
          class="bg-espresso hover:bg-charcoal text-cream px-8 py-4 rounded-lg font-semibold text-lg transition-colors"
        >
          Buy Now - ${data.price}
        </a>
        <button 
          id="add-to-compare"
          class="border-2 border-espresso-dark hover:bg-espresso hover:text-cream text-espresso px-6 py-4 rounded-lg font-semibold transition-colors"
          data-machine-slug={machine.slug}
          data-machine-name={data.name}
        >
          Add to Compare
        </button>
      </div>
    </div>
  </main>

  <!-- Comparison Modal -->
  <div id="comparison-modal" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden">
    <div class="flex items-center justify-center min-h-screen p-4">
      <div class="bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto">
        <div class="p-6">
          <div class="flex justify-between items-center mb-6">
            <h3 class="text-2xl font-bold text-espresso">Machine Comparison</h3>
            <button id="close-modal" class="text-gray-500 hover:text-gray-700">
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
          </div>
          
          <div id="comparison-content" class="text-center text-gray-500 py-8">
            Select machines to compare by clicking "Add to Compare" or "Compare" buttons.
          </div>
          
          <div class="mt-6 text-center">
            <button id="clear-comparison" class="text-caramel hover:text-espresso font-medium">
              Clear All
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Comparison JavaScript -->
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const comparisonModal = document.getElementById('comparison-modal');
      const comparisonContent = document.getElementById('comparison-content');
      const closeModalBtn = document.getElementById('close-modal');
      const clearComparisonBtn = document.getElementById('clear-comparison');
      const addToCompareBtn = document.getElementById('add-to-compare');
      
      let comparedMachines: Array<{slug: string, name: string}> = 
        JSON.parse(localStorage.getItem('comparedMachines') || '[]');

      function updateCompareButton() {
        if (addToCompareBtn) {
          const currentSlug = addToCompareBtn.dataset.machineSlug;
          const isInComparison = comparedMachines.some(m => m.slug === currentSlug);
          
          if (isInComparison) {
            addToCompareBtn.textContent = 'Remove from Compare';
            addToCompareBtn.classList.add('bg-red-600', 'hover:bg-red-700', 'text-white');
            addToCompareBtn.classList.remove('border-2', 'border-espresso-dark', 'hover:bg-espresso', 'hover:text-cream', 'text-espresso');
          } else {
            addToCompareBtn.textContent = 'Add to Compare';
            addToCompareBtn.classList.remove('bg-red-600', 'hover:bg-red-700', 'text-white');
            addToCompareBtn.classList.add('border-2', 'border-espresso-dark', 'hover:bg-espresso', 'hover:text-cream', 'text-espresso');
          }
        }
      }

      function saveComparedMachines() {
        localStorage.setItem('comparedMachines', JSON.stringify(comparedMachines));
      }

      function showComparisonModal() {
        if (comparedMachines.length === 0) {
          comparisonContent!.innerHTML = `
            <div class="text-center text-gray-500 py-8">
              <p>No machines selected for comparison.</p>
              <p class="text-sm mt-2">Click "Add to Compare" on machine cards to start comparing.</p>
            </div>
          `;
        } else {
          const machinesList = comparedMachines.map(m => 
            `<span class="inline-block bg-latte px-3 py-1 rounded-full text-sm mr-2 mb-2">${m.name}</span>`
          ).join('');
          
          comparisonContent!.innerHTML = `
            <div class="mb-6">
              <h4 class="text-lg font-semibold text-espresso mb-4">Selected Machines (${comparedMachines.length})</h4>
              <div class="flex flex-wrap justify-center">${machinesList}</div>
            </div>
            <div class="text-center">
              ${comparedMachines.length >= 2 ? 
                `<a href="/compare?machines=${comparedMachines.map(m => m.slug).join(',')}" 
                   class="bg-espresso hover:bg-charcoal text-cream px-6 py-3 rounded-lg font-semibold transition-colors">
                   Compare ${comparedMachines.length} Machines
                 </a>` :
                '<p class="text-gray-500">Add at least 2 machines to compare them.</p>'
              }
            </div>
          `;
        }
        comparisonModal!.classList.remove('hidden');
      }

      // Event listeners
      addToCompareBtn?.addEventListener('click', function() {
        const slug = this.dataset.machineSlug!;
        const name = this.dataset.machineName!;
        
        const existingIndex = comparedMachines.findIndex(m => m.slug === slug);
        
        if (existingIndex !== -1) {
          comparedMachines.splice(existingIndex, 1);
        } else {
          if (comparedMachines.length >= 4) {
            alert('You can compare up to 4 machines at a time.');
            return;
          }
          comparedMachines.push({ slug, name });
        }
        
        saveComparedMachines();
        updateCompareButton();
        
        // Show notification
        const notification = document.createElement('div');
        notification.className = 'fixed top-4 right-4 bg-caramel text-espresso px-4 py-2 rounded-lg shadow-lg z-50 transition-opacity duration-300';
        notification.textContent = existingIndex !== -1 ? 
          `${name} removed from comparison` : 
          `${name} added to comparison (${comparedMachines.length}/4)`;
        document.body.appendChild(notification);
        
        setTimeout(() => {
          notification.style.opacity = '0';
          setTimeout(() => document.body.removeChild(notification), 300);
        }, 2000);
      });

      // Handle compare buttons from other components
      document.addEventListener('click', function(e) {
        const target = e.target as HTMLElement;
        if (target.classList.contains('compare-btn')) {
          e.preventDefault();
          showComparisonModal();
        }
      });

      closeModalBtn?.addEventListener('click', function() {
        comparisonModal!.classList.add('hidden');
      });

      clearComparisonBtn?.addEventListener('click', function() {
        comparedMachines = [];
        saveComparedMachines();
        updateCompareButton();
        showComparisonModal();
      });

      // Close modal on outside click
      comparisonModal?.addEventListener('click', function(e) {
        if (e.target === this) {
          this.classList.add('hidden');
        }
      });

      // Initialize
      updateCompareButton();
    });
  </script>
</BaseLayout>