---
interface Props {
  name: string;
  brand: string;
  price: number;
  originalPrice?: number;
  image: string;
  rating: number;
  affiliateLink?: string;
  amazonLink: string;
  category: 'manual' | 'semi-automatic' | 'automatic' | 'super-automatic';
  bestFor: 'beginners' | 'intermediate' | 'advanced' | 'all';
  benefitDescription: string;
  features: string[];
  specs: {
    boilerType: string;
    pressure: string;
    waterTank: string;
    dimensions: string;
    warranty: string;
  };
  priceRange: 'budget' | 'mid-range' | 'premium' | 'prosumer';
  featured: boolean;
  order?: number;
}

const { 
  name, 
  brand, 
  price, 
  originalPrice, 
  image, 
  rating, 
  affiliateLink,
  amazonLink,
  category,
  bestFor 
} = Astro.props;

const discount = originalPrice ? Math.round(((originalPrice - price) / originalPrice) * 100) : 0;
---

<div class="card h-full flex flex-col">
  <!-- Product Image -->
  <div class="product-image-container">
    <img 
      src={image} 
      alt={name}
      class="product-image"
    />
    {discount > 0 && (
      <span class="absolute top-2 right-2 bg-caramel text-white px-3 py-1 rounded-full text-sm font-bold">
        -{discount}%
      </span>
    )}
  </div>

  <!-- Product Info -->
  <div class="flex-1">
    <p class="text-sm text-gray-600 mb-1">{brand}</p>
    <h3 class="text-xl font-bold text-espresso-dark mb-2">{name}</h3>
    
    <!-- Rating -->
    <div class="flex items-center mb-3">
      <div class="flex text-yellow-400">
        {Array.from({ length: 5 }).map((_, i) => (
          <svg 
            class={`w-5 h-5 ${i < Math.floor(rating) ? 'fill-current' : 'fill-gray-300'}`}
            viewBox="0 0 20 20"
          >
            <path d="M10 15l-5.878 3.09 1.123-6.545L.489 6.91l6.572-.955L10 0l2.939 5.955 6.572.955-4.756 4.635 1.123 6.545z" />
          </svg>
        ))}
      </div>
      <span class="ml-2 text-sm text-gray-600">{rating.toFixed(1)}</span>
    </div>

    <!-- Badges -->
    <div class="flex flex-wrap gap-2 mb-4">
      <span class="text-xs bg-latte-tan text-espresso-dark px-2 py-1 rounded">
        {category}
      </span>
      <span class="text-xs bg-cream text-espresso-dark px-2 py-1 rounded border border-gray-300">
        Best for: {bestFor}
      </span>
    </div>
  </div>

  <!-- Price & CTA -->
  <div class="mt-auto">
    <div class="flex items-baseline mb-3">
      <span class="text-3xl font-bold text-espresso-dark">${price}</span>
      {originalPrice && (
        <span class="ml-2 text-lg text-gray-500 line-through">${originalPrice}</span>
      )}
    </div>
    
    <a 
      href={affiliateLink || amazonLink}
      target="_blank"
      rel="nofollow noopener"
      class="btn-primary w-full block text-center no-underline"
    >
      Check Price on Amazon
    </a>
  </div>
</div>

<style>
  .product-image-container {
    position: relative;
    width: 100%;
    height: 12rem;
    overflow: hidden;
    border-radius: 0.5rem;
    margin-bottom: 1rem;
  }
  
  .product-image {
    width: 100%;
    height: 100%;
    object-fit: contain;
    object-position: center;
    display: block;
    max-width: 100%;
    max-height: 100%;
  }
  
  /* Force the image to fit within bounds */
  .product-image-container img {
    width: 100% !important;
    height: 100% !important;
    object-fit: contain !important;
    object-position: center !important;
    max-width: 100% !important;
    max-height: 100% !important;
  }
</style>