---
import type { CollectionEntry } from 'astro:content';

export interface Props {
  machines: CollectionEntry<'machines'>[];
  title?: string;
  showActions?: boolean;
  layout?: 'full' | 'compact';
}

const { machines, title = "Machine Comparison", showActions = true, layout = 'full' } = Astro.props;
---

<div class="bg-cream rounded-lg p-6">
  <h2 class="text-2xl font-bold text-espresso mb-6 text-center">{title}</h2>
  
  <!-- Desktop Table -->
  <div class="hidden lg:block overflow-x-auto">
    <table class="w-full border-collapse">
      <thead>
        <tr>
          <th class="text-left p-4 bg-latte text-espresso font-semibold border-r border-cream sticky left-0 z-10 min-w-[150px]">
            Features
          </th>
          {machines.map((machine) => (
            <th class="text-center p-4 bg-latte text-espresso font-semibold min-w-[200px]">
              <div class="space-y-2">
                <img 
                  src={machine.data.image} 
                  alt={machine.data.name}
                  class="w-20 h-20 object-contain mx-auto mb-2"
                />
                <div class="text-sm font-bold">{machine.data.brand}</div>
                <div class="text-xs">{machine.data.name}</div>
              </div>
            </th>
          ))}
        </tr>
      </thead>
      <tbody>
        <tr class="bg-white hover:bg-latte/30">
          <td class="p-4 font-semibold text-espresso border-r border-cream sticky left-0 z-10 bg-white">Price</td>
          {machines.map((machine) => (
            <td class="p-4 text-center text-charcoal">
              <div class="space-y-1">
                <div class="text-xl font-bold text-espresso">${machine.data.price}</div>
                {machine.data.originalPrice && (
                  <div class="text-sm line-through text-gray-500">${machine.data.originalPrice}</div>
                )}
              </div>
            </td>
          ))}
        </tr>
        
        <tr class="bg-cream/50 hover:bg-latte/30">
          <td class="p-4 font-semibold text-espresso border-r border-cream sticky left-0 z-10 bg-cream/50">Rating</td>
          {machines.map((machine) => (
            <td class="p-4 text-center text-charcoal">
              <div class="space-y-1">
                <div class="flex justify-center gap-1">
                  {Array.from({ length: 5 }, (_, i) => (
                    <svg
                      class={`w-4 h-4 ${i < Math.floor(machine.data.rating) ? 'text-yellow-400' : 'text-gray-300'}`}
                      fill="currentColor"
                      viewBox="0 0 20 20"
                    >
                      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                    </svg>
                  ))}
                </div>
                <div class="text-sm">{machine.data.rating}/5</div>
              </div>
            </td>
          ))}
        </tr>
        
        <tr class="bg-white hover:bg-latte/30">
          <td class="p-4 font-semibold text-espresso border-r border-cream sticky left-0 z-10 bg-white">Category</td>
          {machines.map((machine) => (
            <td class="p-4 text-center text-charcoal">
              <span class="inline-block bg-latte px-3 py-1 rounded-full text-sm capitalize">
                {machine.data.category.replace('-', ' ')}
              </span>
            </td>
          ))}
        </tr>
        
        <tr class="bg-cream/50 hover:bg-latte/30">
          <td class="p-4 font-semibold text-espresso border-r border-cream sticky left-0 z-10 bg-cream/50">Best For</td>
          {machines.map((machine) => (
            <td class="p-4 text-center text-charcoal">
              <span class="inline-block bg-latte px-3 py-1 rounded-full text-sm capitalize">
                {machine.data.bestFor}
              </span>
            </td>
          ))}
        </tr>
        
        {layout === 'full' && (
          <>
            <tr class="bg-white hover:bg-latte/30">
              <td class="p-4 font-semibold text-espresso border-r border-cream sticky left-0 z-10 bg-white">Boiler Type</td>
              {machines.map((machine) => (
                <td class="p-4 text-center text-charcoal">
                  <div class="text-sm">{machine.data.specs.boilerType}</div>
                </td>
              ))}
            </tr>
            
            <tr class="bg-cream/50 hover:bg-latte/30">
              <td class="p-4 font-semibold text-espresso border-r border-cream sticky left-0 z-10 bg-cream/50">Pressure</td>
              {machines.map((machine) => (
                <td class="p-4 text-center text-charcoal">
                  <div class="text-sm">{machine.data.specs.pressure}</div>
                </td>
              ))}
            </tr>
            
            <tr class="bg-white hover:bg-latte/30">
              <td class="p-4 font-semibold text-espresso border-r border-cream sticky left-0 z-10 bg-white">Water Tank</td>
              {machines.map((machine) => (
                <td class="p-4 text-center text-charcoal">
                  <div class="text-sm">{machine.data.specs.waterTank}</div>
                </td>
              ))}
            </tr>
          </>
        )}
        
        <tr class={layout === 'full' ? 'bg-cream/50 hover:bg-latte/30' : 'bg-white hover:bg-latte/30'}>
          <td class={`p-4 font-semibold text-espresso border-r border-cream sticky left-0 z-10 ${layout === 'full' ? 'bg-cream/50' : 'bg-white'}`}>Key Features</td>
          {machines.map((machine) => (
            <td class="p-4 text-center text-charcoal">
              <div class="text-left space-y-1 max-w-[200px]">
                {machine.data.features.slice(0, 3).map((feature) => (
                  <div class="flex items-center gap-1 text-xs">
                    <svg class="w-3 h-3 text-caramel flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                    <span>{feature}</span>
                  </div>
                ))}
                {machine.data.features.length > 3 && (
                  <div class="text-xs text-gray-500">+{machine.data.features.length - 3} more</div>
                )}
              </div>
            </td>
          ))}
        </tr>
        
        {showActions && (
          <tr class="bg-latte">
            <td class="p-4 font-semibold text-espresso border-r border-cream sticky left-0 z-10 bg-latte">
              Actions
            </td>
            {machines.map((machine) => (
              <td class="p-4">
                <div class="space-y-2">
                  <a 
                    href={`/machines/${machine.slug}`}
                    class="block w-full bg-espresso hover:bg-charcoal text-cream text-center py-2 rounded-lg font-semibold transition-colors text-sm"
                  >
                    View Details
                  </a>
                  <a 
                    href={machine.data.amazonLink}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="block w-full bg-caramel hover:bg-caramel/90 text-espresso text-center py-2 rounded-lg font-medium transition-colors text-sm"
                  >
                    Buy Now - ${machine.data.price}
                  </a>
                </div>
              </td>
            ))}
          </tr>
        )}
      </tbody>
    </table>
  </div>

  <!-- Mobile Cards -->
  <div class="lg:hidden space-y-6">
    {machines.map((machine) => (
      <div class="bg-white rounded-lg p-6 border">
        <div class="text-center mb-4">
          <img 
            src={machine.data.image} 
            alt={machine.data.name}
            class="w-24 h-24 object-contain mx-auto mb-2"
          />
          <h3 class="font-bold text-espresso">{machine.data.brand}</h3>
          <p class="text-sm text-charcoal">{machine.data.name}</p>
          <p class="text-xl font-bold text-caramel">${machine.data.price}</p>
        </div>
        
        <div class="space-y-2 text-sm">
          <div class="flex justify-between items-center py-1 border-b border-gray-100">
            <span class="font-semibold text-espresso">Rating</span>
            <div class="flex items-center gap-1">
              {Array.from({ length: 5 }, (_, i) => (
                <svg
                  class={`w-3 h-3 ${i < Math.floor(machine.data.rating) ? 'text-yellow-400' : 'text-gray-300'}`}
                  fill="currentColor"
                  viewBox="0 0 20 20"
                >
                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                </svg>
              ))}
              <span class="ml-1 text-xs">{machine.data.rating}/5</span>
            </div>
          </div>
          
          <div class="flex justify-between items-center py-1 border-b border-gray-100">
            <span class="font-semibold text-espresso">Category</span>
            <span class="text-xs capitalize">{machine.data.category.replace('-', ' ')}</span>
          </div>
          
          <div class="flex justify-between items-center py-1 border-b border-gray-100">
            <span class="font-semibold text-espresso">Best For</span>
            <span class="text-xs capitalize">{machine.data.bestFor}</span>
          </div>
          
          {layout === 'full' && (
            <>
              <div class="flex justify-between items-center py-1 border-b border-gray-100">
                <span class="font-semibold text-espresso">Boiler</span>
                <span class="text-xs">{machine.data.specs.boilerType}</span>
              </div>
              
              <div class="flex justify-between items-center py-1">
                <span class="font-semibold text-espresso">Pressure</span>
                <span class="text-xs">{machine.data.specs.pressure}</span>
              </div>
            </>
          )}
        </div>
        
        {showActions && (
          <div class="mt-4 space-y-2">
            <a 
              href={`/machines/${machine.slug}`}
              class="block w-full bg-espresso hover:bg-charcoal text-cream text-center py-2 rounded-lg font-semibold transition-colors text-sm"
            >
              View Details
            </a>
            <a 
              href={machine.data.amazonLink}
              target="_blank"
              rel="noopener noreferrer"
              class="block w-full bg-caramel hover:bg-caramel/90 text-espresso text-center py-2 rounded-lg font-medium transition-colors text-sm"
            >
              Buy Now - ${machine.data.price}
            </a>
          </div>
        )}
      </div>
    ))}
  </div>
</div>